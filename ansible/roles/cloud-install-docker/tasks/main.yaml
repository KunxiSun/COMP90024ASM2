  # Installation guide: https://docs.docker.com/engine/install/ubuntu/
  - name: Uninstall old versions of docker
    tags: 'docker'
    become: yes
    apt:
      name: ['docker', 'docker-engine', 'docker.io']
      state: absent

  - name: Add Docker GPG apt Key
    apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg
      state: present

  - name: Add Docker Repository
    apt_repository:
      repo: deb https://download.docker.com/linux/ubuntu xenial stable
      state: present

  - name: Update apt and install docker-ce
    apt:
      name: ['docker-ce']
      update_cache: yes
      state: latest

  - name: Install Docker Module for Python
    pip:
      name: ['docker']
      state: latest

  - name: Create Docker proxy directory
    file:
      path: '/etc/systemd/system/docker.service.d'
      state: directory

  - name: Create Docker proxy configure file
    file:
      path: '/etc/systemd/system/docker.service.d/http-proxy.conf'
      state: touch

  - name: Modify Docker proxy
    blockinfile:
      path: '/etc/systemd/system/docker.service.d/http-proxy.conf'
      block: '[Service]

              Environment=
              "HTTP_PROXY=http://wwwproxy.unimelb.edu.au:8000/"

              "HTTPS_PROXY=http://wwwproxy.unimelb.edu.au:8000/"

              "http_proxy=http://wwwproxy.unimelb.edu.au:8000/"

              "https_proxy=http://wwwproxy.unimelb.edu.au:8000/"

              "no_proxy=localhost,127.0.0.1,localaddress,172.16.0.0/12,.melbourne.rc.nectar.org.au,.storage.unimelb.edu.au,.cloud.unimelb.edu.au"
              '
      state: present

  - name: reload docker
    systemd:
      name: docker
      daemon_reload: yes
      state: restarted

#  - name: Pull Docker image
#    docker_image:
#      name: "{{ docker_container_image }}"
#      source: pull

